name: Tests

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            src/webapp/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json', 'src/webapp/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          npm ci
          cd src/webapp && npm ci

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            src/webapp/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json', 'src/webapp/package-lock.json') }}

      - name: Build project
        run: npm run build

      - name: Build webapp
        run: npm run webapp:build

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            src/webapp/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json', 'src/webapp/package-lock.json') }}

      - name: Run unit tests
        run: npm run test:unit -- --maxWorkers=2

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: dependencies

    services:
      docker:
        image: docker:24-dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            src/webapp/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json', 'src/webapp/package-lock.json') }}

      - name: Run database integration tests
        run: npm run test:integration:db -- --maxWorkers=2
        env:
          # Testcontainers needs Docker
          TESTCONTAINERS_RYUK_DISABLED: true
